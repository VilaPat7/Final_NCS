{"ast":null,"code":"var _jsxFileName = \"/home/viktoria/study/ncs/homeplants/src/pages/search/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './search_page.css';\nimport { Element } from \"../../components/element\";\nimport plantImage from '../../images/1.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchPage = () => {\n  _s();\n  const ListPlants = [{\n    id: 1,\n    plantName: \"a\",\n    plantImage: plantImage\n  }, {\n    id: 2,\n    plantName: \"a\",\n    plantImage: plantImage\n  }];\n  const handleSearch = async () => {\n    try {\n      const response = await fetch(`/api/search?q=${searchQuery}`);\n      const data = await response.json();\n      setPlants(data);\n    } catch (err) {\n      console.error('An error occurred', err);\n    }\n  };\n  const [filter, setFilter] = useState(\"all\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const filteredPlants = ListPlants.filter(plant => plant.plantName.toLowerCase().includes(searchQuery.toLowerCase()) && (filter === \"all\" ? true : plant.type === filter));\n  const handleSelect = id => {\n    console.log('Select', id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search_page\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"search_title\",\n      children: \"Product Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value),\n      className: \"search_input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search_grid\",\n      children: filteredPlants.map(plant => /*#__PURE__*/_jsxDEV(Element, {\n        plantID: plant.id,\n        plantTitle: plant.plantName,\n        plantImage: plant.plantImage,\n        plantClick: () => handleSelect(plant.id)\n      }, plant.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchPage, \"5G3ot748MJAH8gLUY+wOKaCWGcg=\");\n_c = SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","Element","plantImage","jsxDEV","_jsxDEV","SearchPage","_s","ListPlants","id","plantName","handleSearch","response","fetch","searchQuery","data","json","setPlants","err","console","error","filter","setFilter","setSearchQuery","filteredPlants","plant","toLowerCase","includes","type","handleSelect","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","map","plantID","plantTitle","plantClick","_c","$RefreshReg$"],"sources":["/home/viktoria/study/ncs/homeplants/src/pages/search/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport './search_page.css';\nimport { Element } from \"../../components/element\";\nimport plantImage from '../../images/1.png';\n\nexport const SearchPage = () => {\n    const ListPlants = [\n        {\n            id: 1,\n            plantName: \"a\",\n            plantImage: plantImage\n        },\n        {\n            id: 2,\n            plantName: \"a\",\n            plantImage: plantImage\n        }\n    ];\n    const handleSearch = async () => {\n        try {\n            const response = await fetch(`/api/search?q=${searchQuery}`);\n            const data = await response.json();\n            setPlants(data);\n        } catch (err) {\n            console.error('An error occurred', err);\n        }\n    };\n\n    const [filter, setFilter] = useState(\"all\");\n    const [searchQuery, setSearchQuery] = useState(\"\");\n\n    const filteredPlants = ListPlants.filter((plant) =>\n        plant.plantName.toLowerCase().includes(searchQuery.toLowerCase()) &&\n        (filter === \"all\" ? true : plant.type === filter)\n    );\n\n    const handleSelect = (id) => {\n        console.log('Select', id);\n    };\n\n    return (\n        <div className=\"search_page\">\n            <p className=\"search_title\">Product Search</p>\n            <input\n                type=\"text\"\n                placeholder=\"Search...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"search_input\"\n            />\n            <div className=\"search_grid\">\n                {filteredPlants.map((plant) => (\n                    <Element\n                        key={plant.id}\n                        plantID={plant.id}\n                        plantTitle={plant.plantName}\n                        plantImage={plant.plantImage}\n                        plantClick={() => handleSelect(plant.id)}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}